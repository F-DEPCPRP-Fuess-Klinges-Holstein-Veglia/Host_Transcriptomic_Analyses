########################~~~~~~~~~DRTO CNAT combo filtering txome~~~~~~~~~~~~########################

# running bbsplit & kraken on files before assembly worked well (high busco & N50, removed ~30% of symbiont contamination), and so did running the protein blast on an assembled transcriptome (high busco & N50, reduced contam ~20%) -- now combining these two methods to see if they result in a still high quality txome and hopefully reduce contamination even further

*** This worked well, applying to all other transcriptome assemblies

#in trinity_out_dir_cnat

mkdir bbspl_plus_protblast

# first, set up kraken filtering using genome database I built previously and found to work best (i.e. didn't reduce busco to 60%)

vi kraken.sh
i
#!/bin/bash
#SBATCH --job-name=kraken
#SBATCH -N 1
#SBATCH -t 1-24:00
#SBATCH --partition=shared
#SBATCH --mem=50G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH --open-mode=append
#SBATCH -o kraken_%j.out
#SBATCH -e kraken_%j.err

#for loop to run kraken filtering on all pairs in the folder
# this code assumes you are already in the directory that contains the reads
for infile in *R1_cln.fastq
	do
	echo "working with sample $infile"
	base=$(basename ${infile} _R1_cln.fastq)
	infile2=${base}_R2_cln.fastq
	echo "Now running kraken"
	/home/vwk8/miniconda3/envs/RNAseq/bin/kraken2-2.0.8-beta/kraken2 --db /home/vwk8/miniconda3/envs/RNAseq/bin/krakenDB_gen ${base}_R1_cln.fastq ${base}_R2_cln.fastq --threads 16 --paired --classified-out ${base}_contam#.fastq --unclassified-out ${base}_unclass#.fastq --report ${base}_krakenDB.report --output ${base}_krakenDB.out
	done
	echo "Dunzo"

# Now run bbsplit on these kraken-filtered files

#adding two new symbiont txomes, from clades A & C, also for some reason didn't use S. mic the last time? so put that one in too

#!/bin/bash
#SBATCH --job-name=bbsplit
#SBATCH -N 1
#SBATCH -t 1-24:00
#SBATCH --partition=shared
#SBATCH --mem=100G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o bbsplit_%j.out
#SBATCH -e bbsplit_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/
DIR=/home/vwk8/transcriptomes/symbiont
for FILE in *_unclass_1.fastq; do
        echo ${FILE}
        SAMP=$(basename -s _unclass_1.fastq $FILE)
        echo $SAMP

/home/vwk8/miniconda3/envs/RNAseq/bin/bbsplit.sh in1=${SAMP}_unclass_1.fastq in2=${SAMP}_unclass_2.fastq ref=${DIR}/Smic_Aranda2016/Smic.transcriptomeRef.cov5.fa,${DIR}/SymA_Y106_Shoguchi2018.fasta,${DIR}/Baenigmaticum_Parkinson2016/aenig_assembly_longest_250.fa,${DIR}/Bminutum_Parkinson2016/min_assembly_longest_250.fa,${DIR}/Bpseudominutum_Parkinson2016/pmin_assembly_longest_250.fa,${DIR}/Bpsygmophilum_Parkinson2016/psyg_assembly_longest_250.fa,${DIR}/Cgoreaui_Davies2016/davies_cladeC_feb.fasta,${DIR}/Clado_spp_Y103_Shoguchi2018.fasta,${DIR}/Dtrenchii_Bellantuono2019/Dtrenchii_rnaseq_assembly_v1.0.fasta basename=${SAMP}_%.fasta refstats=${SAMP}_stats.txt outu1=${SAMP}_bboutu_R1.fasta outu2=${SAMP}_bboutu_R2.fasta
done

## pulled out (example from one sample)
#name				%unambiguousReads	unambiguousMB	%ambiguousReads	ambiguousMB	unambiguousReads ambiguousReads	assignedReads	assignedBases
psyg_assembly_longest_250	2.29410			307.123397	1.80827		242.770245	2069268	1631050	3315972	493062340
aenig_assembly_longest_250	0.77844			103.422343	1.67661		225.019016	702150	1512294	733338	108039957
SymA_Y106_Shoguchi2018		0.12531			16.628153	0.17921		24.040940	113032	161650	113044	16629185
min_assembly_longest_250	0.09724			12.836169	0.67213		89.343541	87710	606256	693882	102170348
pmin_assembly_longest_250	0.06873			9.031375	0.63446		84.272092	61996	572278	61996	9031375
Clado_spp_Y103_Shoguchi2018	0.03472			4.545314	0.18107		24.321570	31318	163324	191912	28493518
davies_cladeC_feb		0.02753			3.474064	0.03825		5.052059	24832	34502	25716	3601441
Dtrenchii_rnaseq_assembly_v1.0	0.01044			1.002156	0.00298		0.335530	9414	2688	11302	1233260
Smic.transcriptomeRef.cov5	0.00221			0.213758	0.00140		0.115407	1996	1264	3226	325692

## now assemble these in Trinity

vi trinity_cnat.sh
i
#!/bin/bash
#SBATCH --job-name=Trin_cnat
#SBATCH -N 1
#SBATCH -t 14-24:00
#SBATCH --partition=himem
#SBATCH --mem=500G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o trinity_%j.out
#SBATCH -e trinity_%j.err

Trinity --normalize_reads --seqType fa --grid_node_CPU 21 --grid_node_max_memory 400G --max_memory 400G --SS_lib_type FR --left DT25_CNAT_1H_Sept_2021_S222_bboutu_R1.fasta,DT25_CNAT_3H_June_2022_S248_bboutu_R1.fasta,DT26_CNAT_2H_June_2022_S318_bboutu_R1.fasta,DT26_CNAT_3H_August_2022_S344_bboutu_R1.fasta,DT28_CNAT_1H_June_2022_S325_bboutu_R1.fasta --right DT25_CNAT_1H_Sept_2021_S222_bboutu_R2.fasta,DT25_CNAT_3H_June_2022_S248_bboutu_R2.fasta,DT26_CNAT_2H_June_2022_S318_bboutu_R2.fasta,DT26_CNAT_3H_August_2022_S344_bboutu_R2.fasta,DT28_CNAT_1H_June_2022_S325_bboutu_R2.fasta --CPU 25 --output trinity_out_dir


#N50 stats

################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':  450936
Total trinity transcripts:      738460
Percent GC: 40.78
########################################
Stats based on ALL transcript contigs:
########################################
        Contig N10: 3883
        Contig N20: 2605
        Contig N30: 1834
        Contig N40: 1270
        Contig N50: 879

        Median contig length: 337
        Average contig: 609.31
        Total assembled bases: 449953926
#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################
        Contig N10: 3207
        Contig N20: 1819
        Contig N30: 1051
        Contig N40: 681
        Contig N50: 490
        Median contig length: 288
        Average contig: 459.43
        Total assembled bases: 207174705

## Busco stats, from metazoan db ###

	C:95.0%[S:28.1%,D:66.9%],F:3.4%,M:1.6%,n:954	   
	906	Complete BUSCOs (C)			   
	268	Complete and single-copy BUSCOs (S)	   
	638	Complete and duplicated BUSCOs (D)	   
	32	Fragmented BUSCOs (F)			   
	16	Missing BUSCOs (M)			   
	954	Total BUSCO groups searched


##now trying and running through remaining txome assembly steps (minus master coral database)

#select longest isoform
/home/vwk8/miniconda3/envs/RNAseq/opt/trinity-2.9.1/util/misc/get_longest_isoform_seq_per_trinity_gene.pl Trinity.fasta > processed_transcriptome_cnat.fa

# N50 after this step
################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':  450936
Total trinity transcripts:      450936
Percent GC: 40.77

########################################
Stats based on ALL transcript contigs:
########################################

        Contig N10: 3207
        Contig N20: 1819
        Contig N30: 1051
        Contig N40: 681
        Contig N50: 490

        Median contig length: 288
        Average contig: 459.43
        Total assembled bases: 207174705

#An index of the metatranscriptome assembly is created with [cdbfasta]
/home/vwk8/miniconda3/envs/RNAseq/bin/cdbfasta-master/cdbfasta Trinity.fasta

#Extract the longest open reading frame from each contig and then generate its predicted peptide sequence using [TransDecoder]
###this should remove rRNAs and tRNAs, as they are not coding typically
## and is identifying isoforms
/home/vwk8/miniconda3/envs/RNAseq/bin/TransDecoder-TransDecoder-v5.7.1/TransDecoder.LongOrfs -t processed_transcriptome_cnat.fa
/home/vwk8/miniconda3/envs/RNAseq/bin/TransDecoder-TransDecoder-v5.7.1/TransDecoder.Predict -t processed_transcriptome_cnat.fa
# Rename the resulting .pep file to end in .fa
mv processed_transcriptome_cnat.fa.transdecoder.pep processed_transcriptome_cnat.transdecoder.fa

#similar sequences are removed with cdhit
/home/vwk8/miniconda3/envs/RNAseq/bin/cdhit-master/cd-hit -i processed_transcriptome_cnat.transdecoder.fa -o reference_proteome.fa
# This reference proteome is now ready for Orthofinder

#~~~~~ Step 4: Make an alignable transcriptome~~~~~~~~~~~~
#Use the reference proteome to create an alignable transcriptome:
grep ">" reference_proteome.fa > proteome_names.txt
sed 's/.p/\t/' proteome_names.txt > proteome_names_format.txt
awk '{print $1}'  proteome_names_format.txt > contigs_to_extract.txt
sed 's/^.//g' contigs_to_extract.txt > contigs_list.txt

cat contigs_list.txt | /home/vwk8/miniconda3/envs/RNAseq/bin/cdbfasta-master/cdbyank Trinity.fasta.cidx > final_coral_reference_transcriptome.fa

# N50 on final

################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':  43275
Total trinity transcripts:      43275
Percent GC: 42.42
########################################
Stats based on ALL transcript contigs:
########################################
        Contig N10: 5609
        Contig N20: 4223
        Contig N30: 3406
        Contig N40: 2831
        Contig N50: 2349
        Median contig length: 862
        Average contig: 1417.74
        Total assembled bases: 61352527
#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################
        Contig N10: 5609
        Contig N20: 4223
        Contig N30: 3406
        Contig N40: 2831
        Contig N50: 2349
        Median contig length: 862
        Average contig: 1417.74
        Total assembled bases: 61352527

# also running BUSCO in metazoan mode

***** Results: *****

	C:85.6%[S:85.0%,D:0.6%],F:5.7%,M:8.7%,n:954	   
	817	Complete BUSCOs (C)			   
	811	Complete and single-copy BUSCOs (S)	   
	6	Complete and duplicated BUSCOs (D)	   
	54	Fragmented BUSCOs (F)			   
	83	Missing BUSCOs (M)			   
	954	Total BUSCO groups searched


########### now start additional contamination removal step via protein blast with 17 Symbiodiniaceae proteome files #############3

#Now that I know it'll run faster, going to condense but still use as many spp as possible
#clade A
Sfitti.prot.Reich2021.fasta
S_linucheae_prot.GonzalezPech2021.faa
S_microadr.prot_GonzalezPech2021.faa
S_natans.prot_GonzalezPech2021.faa
S_necroa_prot_GonzalezPech2021.faa
S_tridacnidorum_prot_GonzalezPech2021.faa
symbiodinium_spp_prot.Shoguchi2018.fa

#clade B
B_minutum.prot_Shoguchi2013.fa

#clade C
C_goreaui.prot_Chen2019.faa
Cgoreaui_protein_Chen2022.fa
C_sp_C92.prot_Shoguchi2016.faa
Cspp_C15_prot_Messer2024.faa
Cspp_prot_Shoguchi2018.fa

#Clade D
Dtrenchii_prot_Shoguchi2021.fa
Dtren_CCMP2556_prot_Dougan2024.fasta
Dtren_SCF082_prot_Dougan2024.fasta

#clade F
F.kawagutii_prot_TangchengLi2020.fasta

# making combined proteomes file in proteomes directory

cat B_minutum.prot_Shoguchi2013.fa C_goreaui.prot_Chen2019.faa Cgoreaui_protein_Chen2022.fa C_sp_C92.prot_Shoguchi2016.faa Cspp_C15_prot_Messer2024.faa Cspp_prot_Shoguchi2018.fa Dtrenchii_prot_Shoguchi2021.fa Dtren_CCMP2556_prot_Dougan2024.fasta Dtren_SCF082_prot_Dougan2024.fasta F.kawagutii_prot_TangchengLi2020.fasta S_linucheae_prot.GonzalezPech2021.faa S_microadr.prot_GonzalezPech2021.faa S_natans.prot_GonzalezPech2021.faa S_necroa_prot_GonzalezPech2021.faa S_tridacnidorum_prot_GonzalezPech2021.faa Sfitti.prot.Reich2021.fasta symbiodinium_spp_prot.Shoguchi2018.fa >Symb_prots

#now have to turn this into a database that blast can use
# running this in the proteomes directory
/home/vwk8/miniconda3/envs/RNAseq/bin/ncbi-blast-2.15.0+/bin/makeblastdb -in Symb_prots -input_type fasta -dbtype prot -out SymbProts_db

vi contam_prot_blast.sh
#!/bin/bash
#SBATCH --job-name=blast_cnat
#SBATCH -N 1
#SBATCH -t 13-24:00
#SBATCH --partition=himem
#SBATCH --mem=500G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o prot_remov_%j.out
#SBATCH -e prot_remov_%j.err

blastx -query final_coral_reference_transcriptome.fa -db ~/proteomes/SymbProts_db -outfmt "6 qseqid evalue pident length" -max_target_seqs 5 -out symbiont_hits.txt

## ran in 4 days & 10 hours- must be faster bc txome was already filtered w bbsplit at beginning

# Modified from Astrangia pub, now we compare against the symbiont reference proteome and pull out seqs with >80% identity and >100bp length match
awk '{if ($3 > 80) print $1,$2,$4 }' symbiont_hits.txt > symbiont_contigs_80.txt
awk '{if ($3 > 100) print $1}' symbiont_contigs_80.txt > final_symbiont_contigs.txt
awk '!a[$0]++' final_symbiont_contigs.txt > final_symbiont_contigs_nodup.txt

#Then pull the reads using BBmap
filterbyname.sh in=final_coral_reference_transcriptome.fa out=final_blasted_cnat_transcriptome.fa names=final_symbiont_contigs_nodup.txt

#now check quality, completeness
/home/vwk8/miniconda3/envs/RNAseq/opt/trinity-2.9.1/util/TrinityStats.pl final_blasted_cnat_transcriptome.fa

################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':  43038
Total trinity transcripts:      43038
Percent GC: 42.40
########################################
Stats based on ALL transcript contigs:
########################################
        Contig N10: 5613
        Contig N20: 4227
        Contig N30: 3409
        Contig N40: 2835
        Contig N50: 2352
        Median contig length: 868
        Average contig: 1421.95
        Total assembled bases: 61197802
#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################
        Contig N10: 5613
        Contig N20: 4227
        Contig N30: 3409
        Contig N40: 2835
        Contig N50: 2352
        Median contig length: 868
        Average contig: 1421.95
        Total assembled bases: 61197802


#!/bin/bash
#SBATCH --job-name=busco_cnat
#SBATCH -N 1
#SBATCH -t 6-24:00
#SBATCH --partition=shared
#SBATCH --mem=50G
#SBATCH --mail-type=end
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o busco_%j.out
#SBATCH -e busco_%j.err

busco -i final_blasted_cnat_transcriptome.fa  -l /home/vwk8/miniconda3/envs/RNAseq/bin/busco_downloads/lineages/metazoa_odb10 -o busco_output_blasted -m transcriptome --offline

	***** Results: *****
	C:85.1%[S:84.5%,D:0.6%],F:5.8%,M:9.1%,n:954	   
	812	Complete BUSCOs (C)			   
	806	Complete and single-copy BUSCOs (S)	   
	6	Complete and duplicated BUSCOs (D)	   
	55	Fragmented BUSCOs (F)			   
	87	Missing BUSCOs (M)			   
	954	Total BUSCO groups searched

#get output file of all the transcripts in the final assembled transcriptome, will use this in R
fgrep ">" final_blasted_cnat_transcriptome.fa > CNAT_transcripts.txt
#open with excel, ctrl+f and replace to remove the carrots it pulls out, and separate out the columns
#renamed to CNAT_t_g to just have gene and transcript (it's just the initial name from each row copied for gene & transcript)

#~~~~STEP 5~~~~~
#annotate this final transcriptome now

vi prot_blast_annot.sh
i
#!/bin/bash
#SBATCH --job-name=annotate_cnat
#SBATCH -N 1
#SBATCH -t 4-24:00
#SBATCH --partition=himem
#SBATCH --mem=250G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o protblast_%j.out
#SBATCH -e protblast_%j.err

/home/vwk8/miniconda3/envs/RNAseq/bin/ncbi-blast-2.15.0+/bin/blastx -query final_blasted_cnat_transcriptome.fa -db /home/vwk8/miniconda3/envs/RNAseq/bin/ncbi-blast-2.15.0+/bin/uniprot_db -outfmt "6 sseqid qseqid evalue" -max_target_seqs 1 -out annotated_coral_reference_transcriptome.txt

#now need to put this annotated transcripts file into a format to get GO terms for use in R to get GO terms for differentially expressed genes
#winscp-ed file annotated_coral_reference_transcriptome.txt to DRTO_FDEP github directory
Go to UniProt database, hit search, select only to view reviewed proteins, then customize columns to only include entry name, gene names, and gene ontology IDs. Then download as tsv.
#finish the rest in R

#################Start aligning reads to reference transcriptomes###############
# BBSplit: Sort coral and Symbiodiniaceae reads
#Our eukaryotic reads contain sequences that originate from both the coral host species as well as their intracellular Symbiodiniaceae. There are four predominant Symbiodiniaceae genera that form symbioses with the corals in our study, so we will use [BBMap](https://jgi.doe.gov/data-and-tools/bbtools/bb-tools-user-guide/bbmap-guide/) to map reads to the coral host transcriptome, as well as Symbiodinium, Breviolum, Cladocopium, and Durusdinium transcriptomes, prior to read quantification. BBMap #is splice-aware global aligner for DNA and RNA sequencing reads, and BBsplit uses BBMap to map reads to multiple transcriptomes at once and determines which transcriptome each reads matches to best.

## want to use one representative transcriptome for each genera of Symbiodiniaceae, and prefer using ones assembled from pure culture (as opposed to from in hospite/from coral tissue):
Clade A: Smic Aranda et al. 2016 (both options from pure culture, this one assoc. with Cnidarians more)
Clade B: Bminutum, Parkinson 2016 (most known to associate with warm water corals of the 4 available from this pub)
Clade C: Clado_spp_Y103, Shoguchi et al. 2018 (from clam but from culture, C goreaui is from SSID and not great quality)
Clade D: D trenchii, Bellantuono 2019 (only option)

vi bbsplit.sh
i
#!/bin/bash
#SBATCH --job-name=bbsplit_cnat
#SBATCH -N 1
#SBATCH -t 4-24:00
#SBATCH --partition=shared
#SBATCH --mem=100G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o bbsplit_%j.out
#SBATCH -e bbsplit_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/
DIR=/home/vwk8/transcriptomes
for FILE in *_R1_cln.fastq; do
        echo ${FILE}
        SAMP=$(basename -s _R1_cln.fastq $FILE)
        echo $SAMP

/home/vwk8/miniconda3/envs/RNAseq/bin/bbsplit.sh in1=${SAMP}_R1_cln.fastq in2=${SAMP}_R2_cln.fastq ref=${DIR}/DRTO_denovo/final_blasted_cnat_transcriptome.fa,${DIR}/symbiont/Dtrenchii_Bellantuono2019/Dtrenchii_rnaseq_assembly_v1.0.fasta,${DIR}/symbiont/Clado_spp_Y103_Shoguchi2018.fasta,${DIR}/symbiont/Bminutum_Parkinson2016/min_assembly_longest_250.fa,${DIR}/symbiont/Smic_Aranda2016/Smic.transcriptomeRef.cov5.fa basename=${SAMP}_%.fasta refstats=${SAMP}_stats.txt outu1=${SAMP}_bboutu_R1.fasta outu2=${SAMP}_bboutu_R2.fasta
done
#This will create one output for each file. The text file for ref stats can be downloaded and placed into BBSplit Statistics output file for all species. It will be used at bottom for Summary of Genus Averages.

## ran in 23 hours

#From here, each file will need to be reformatted with BBMap program to split back into two separate fastq files for forward and reverse reads
#first doing this for cnat files

# move coral aligned files to new directory within titled "salmon"

vi bbmap_cnat.sh
i
#!/bin/bash
#SBATCH --job-name=bbmap_cnat
#SBATCH -N 1
#SBATCH -t 2-24:00
#SBATCH --partition=shared
#SBATCH --mem=50G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o bbmap_cnat_%j.out
#SBATCH -e bbmap_cnat_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/
for FILE in *_transcriptome.fasta; do
        echo ${FILE}
        SAMP=$(basename -s .fasta $FILE)
        echo $SAMP
/home/vwk8/miniconda3/envs/RNAseq/bin/bbmap/reformat.sh in=${SAMP}.fasta out1=${SAMP}_1.fq out2=${SAMP}_2.fq
done

## ran in an hour and a half

###### Salmon: Read Quantification ###################
#Salmon (https://salmon.readthedocs.io/en/latest/salmon.html#) is a tool built for transcript quantification. It uses two phases; indexing and quantification, to map samples. The first step, indexing, is independent of the reads and requires a reference transcript to build an index. Code for that is as follows:

## Index Building for Host Transcriptomes
#For the host indexes, we can keep kmer values at a standard as we are confident in the transcriptomes we have just built and the quality of the transcriptome.
# CNAT index
#ran very quickly
/home/vwk8/miniconda3/envs/RNAseq/bin/salmon index -t /home/vwk8/transcriptomes/DRTO_denovo/final_blasted_cnat_transcriptome.fa -i CNAT_transcriptome_index.fa

## Mapping Reads: Use Salmon for quasi-mapping results
#eventually do for dominant symbiont as well
[Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#) is a tool built for transcript quantification. It uses two phases; indexing and quantification, to map samples. The second phase: quantification, using quasi-mapping program to map samples to index. Quasi-mapping assumes a generally small file and increased number of repeats in reference sequences. It also takes into account splicing because a transcriptome is assumed to be used for the index.

#  move host-aligned filtered files into you salmon directory
#  since we'll be running the same command on each sample, the simplest way to automate this process is with a simple shell script
#  the script loops through each sample and invokes salmon using fairly barebone options
# -i  tells salmon where to find the index
# -l A tells salmon that it should automatically determine the library type of the sequencing reads (stranded vs. unstranded etc.)
# -1 and -2 tell salmon where to find the left and right reads for this sample (notice, salmon will accept gzipped FASTQ files directly)
# -p 8 tells salmon to make use of 8 threads
# -o specifies the directory where salmon's quantification results should be written

# Loop for Cnat
vi cnat_salmon_loop.sh

#!/bin/bash
#SBATCH --job-name=salmon_cnat
#SBATCH -N 1
#SBATCH -t 4-24:00
#SBATCH --partition=himem
#SBATCH --mem=500G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o salmon_cnat_reads_%j.out
#SBATCH -e salmon_cnat_reads_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/salmon
for FILE in *_1.fq; do
        echo ${FILE}
        SAMP=$(basename -s _1.fq $FILE)
        echo $SAMP
        DIR=/home/vwk8/transcriptomes/DRTO_denovo

/home/vwk8/miniconda3/envs/RNAseq/bin/salmon quant -i ${DIR}/CNAT_transcriptome_index.fa -l A \
				-1 ${SAMP}_1.fq \
				-2 ${SAMP}_2.fq \
				-p 8 --validateMappings -o quants/${SAMP}_quant
done

#% alignment?
grep "Mapping rate" salmon_cnat_reads_471407.err
[2024-11-07 12:15:49.745] [jointLog] [info] Mapping rate = 82.0137%
[2024-11-07 12:17:43.900] [jointLog] [info] Mapping rate = 82.3189%
[2024-11-07 12:19:45.038] [jointLog] [info] Mapping rate = 78.8672%
[2024-11-07 12:21:31.356] [jointLog] [info] Mapping rate = 83.4047%
[2024-11-07 12:23:03.866] [jointLog] [info] Mapping rate = 76.8675%
[2024-11-07 12:24:51.954] [jointLog] [info] Mapping rate = 77.5357%
[2024-11-07 12:26:31.694] [jointLog] [info] Mapping rate = 83.2141%
[2024-11-07 12:28:31.334] [jointLog] [info] Mapping rate = 64.9476%
[2024-11-07 12:30:44.792] [jointLog] [info] Mapping rate = 79.1248%
[2024-11-07 12:32:55.042] [jointLog] [info] Mapping rate = 78.8377%
[2024-11-07 12:34:58.240] [jointLog] [info] Mapping rate = 81.1384%
[2024-11-07 12:36:53.764] [jointLog] [info] Mapping rate = 77.7619%
[2024-11-07 12:39:00.265] [jointLog] [info] Mapping rate = 83.5966%
[2024-11-07 12:41:08.365] [jointLog] [info] Mapping rate = 80.3313%
[2024-11-07 12:43:18.826] [jointLog] [info] Mapping rate = 83.6582%
[2024-11-07 12:45:10.222] [jointLog] [info] Mapping rate = 83.5063%
[2024-11-07 12:47:36.319] [jointLog] [info] Mapping rate = 84.0479%
[2024-11-07 12:49:33.604] [jointLog] [info] Mapping rate = 57.3826%
[2024-11-07 12:51:13.183] [jointLog] [info] Mapping rate = 82.5699%
[2024-11-07 12:53:04.673] [jointLog] [info] Mapping rate = 81.4579%
[2024-11-07 12:54:14.540] [jointLog] [info] Mapping rate = 76.3021%
[2024-11-07 12:56:32.945] [jointLog] [info] Mapping rate = 80.9869%
[2024-11-07 12:58:18.201] [jointLog] [info] Mapping rate = 78.6753%
[2024-11-07 13:00:17.996] [jointLog] [info] Mapping rate = 85.2156%
[2024-11-07 13:02:24.113] [jointLog] [info] Mapping rate = 84.401%
[2024-11-07 13:03:57.196] [jointLog] [info] Mapping rate = 73.2565%
[2024-11-07 13:06:05.159] [jointLog] [info] Mapping rate = 80.4132%
[2024-11-07 13:08:28.468] [jointLog] [info] Mapping rate = 84.4079%
[2024-11-07 13:11:28.940] [jointLog] [info] Mapping rate = 83.569%
[2024-11-07 13:13:27.288] [jointLog] [info] Mapping rate = 78.8151%
[2024-11-07 13:15:13.559] [jointLog] [info] Mapping rate = 84.6091%
[2024-11-07 13:17:28.033] [jointLog] [info] Mapping rate = 85.293%
[2024-11-07 13:19:46.482] [jointLog] [info] Mapping rate = 78.6939%
[2024-11-07 13:21:54.878] [jointLog] [info] Mapping rate = 77.8939%
[2024-11-07 13:23:45.529] [jointLog] [info] Mapping rate = 81.9509%


################# Now  running alignment in Salmon for symbiont reads for dominant clade present in each sample #################################
#First making indexes for symbiont transcriptomes, will use these for remained of species/regions samples
## Index Building for Symbiont Transcriptomes
# From Beavers et al: For the symbiont indexes, we can drop kmer values at a standard in order to get the best quality of reads.
#  --> k value dropped from 31 standard to 23 because of quality of fasta index file
# this is not necessarily what you should base the k value on- salmon manual says to base it on length of your reads, as it specifies the minimum acceptable length of reads for a valid match, and said 31 (the default) seems to work well for reads greater than 75 bp, and mine are 100 bp, so sticking with that.

#Durusdinium index
/home/vwk8/miniconda3/bin/salmon index -t /home/vwk8/transcriptomes/symbiont/Dtrenchii_Bellantuono2019/Dtrenchii_rnaseq_assembly_v1.0.fasta -i D_trenchii_index
#Cladocopium index
/home/vwk8/miniconda3/bin/salmon index -t /home/vwk8/transcriptomes/symbiont/Clado_spp_Y103_Shoguchi2018.fasta -i C_sppY103_index
# Breviolum index
/home/vwk8/miniconda3/bin/salmon index -t /home/vwk8/transcriptomes/symbiont/Bminutum_Parkinson2016/min_assembly_longest_250.fa -i B_min_index
# Symbiodinium index
/home/vwk8/miniconda3/bin/salmon index -t /home/vwk8/transcriptomes/symbiont/Smic_Aranda2016/Smic.transcriptomeRef.cov5.fa -i S_mic_index

# using BBSplit files from when did all of this on the cnat files, moved into new directory in cnat clean reads titled "salmon_cladeB" - all samples had Breviolum as dominant symbiont type

vi bbmap.sh
i
#!/bin/bash
#SBATCH --job-name=bbm_symB
#SBATCH -N 1
#SBATCH -t 2-24:00
#SBATCH --partition=shared
#SBATCH --mem=50G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o bbmap_%j.out
#SBATCH -e bbmap_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/
for FILE in *_250.fasta; do
        echo ${FILE}
        SAMP=$(basename -s .fasta $FILE)
        echo $SAMP
/home/vwk8/miniconda3/envs/RNAseq/bin/bbmap/reformat.sh in=${SAMP}.fasta out1=${SAMP}_1.fq out2=${SAMP}_2.fq
done


# Loop for symB
vi salmon.sh

#!/bin/bash
#SBATCH --job-name=salm_cnB
#SBATCH -N 1
#SBATCH -t 4-24:00
#SBATCH --partition=himem
#SBATCH --mem=500G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o salmon_%j.out
#SBATCH -e salmon_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/salmon
for FILE in *_1.fq; do
        echo ${FILE}
        SAMP=$(basename -s _1.fq $FILE)
        echo $SAMP
        DIR=/home/vwk8/transcriptomes/symbiont

/home/vwk8/miniconda3/bin/salmon quant -i ${DIR}/Bminutum_Parkinson2016/B_min_index -l A \
				-1 ${SAMP}_1.fq \
				-2 ${SAMP}_2.fq \
				-p 8 --validateMappings -o quants/${SAMP}_quant
done

# % alignment?

grep "Mapping rate" salmon_481943.err
[2024-12-03 11:50:45.589] [jointLog] [info] Mapping rate = 68.0723%
[2024-12-03 11:51:09.748] [jointLog] [info] Mapping rate = 70.8995%
[2024-12-03 11:51:20.580] [jointLog] [info] Mapping rate = 61.0915%
[2024-12-03 11:51:41.360] [jointLog] [info] Mapping rate = 66.5139%
[2024-12-03 11:51:54.162] [jointLog] [info] Mapping rate = 66.5217%
[2024-12-03 11:52:40.455] [jointLog] [info] Mapping rate = 72.047%
[2024-12-03 11:52:59.136] [jointLog] [info] Mapping rate = 68.1572%
[2024-12-03 11:53:12.988] [jointLog] [info] Mapping rate = 66.4992%
[2024-12-03 11:53:27.470] [jointLog] [info] Mapping rate = 63.1583%
[2024-12-03 11:53:53.490] [jointLog] [info] Mapping rate = 69.956%
[2024-12-03 11:54:06.413] [jointLog] [info] Mapping rate = 70.1555%
[2024-12-03 11:54:30.240] [jointLog] [info] Mapping rate = 70.0048%
[2024-12-03 11:54:39.223] [jointLog] [info] Mapping rate = 65.1656%
[2024-12-03 11:54:52.596] [jointLog] [info] Mapping rate = 39.2242%
[2024-12-03 11:55:13.344] [jointLog] [info] Mapping rate = 69.0904%
[2024-12-03 11:56:03.445] [jointLog] [info] Mapping rate = 72.2894%
[2024-12-03 11:56:14.006] [jointLog] [info] Mapping rate = 66.3084%
[2024-12-03 11:56:27.362] [jointLog] [info] Mapping rate = 41.7686%
[2024-12-03 11:56:50.917] [jointLog] [info] Mapping rate = 59.3033%
[2024-12-03 11:57:04.221] [jointLog] [info] Mapping rate = 67.5242%
[2024-12-03 11:57:10.207] [jointLog] [info] Mapping rate = 64.2425%
[2024-12-03 11:57:23.674] [jointLog] [info] Mapping rate = 70.0822%
[2024-12-03 11:57:35.150] [jointLog] [info] Mapping rate = 76.3546%
[2024-12-03 11:57:44.417] [jointLog] [info] Mapping rate = 63.8311%
[2024-12-03 11:58:23.172] [jointLog] [info] Mapping rate = 70.4182%
[2024-12-03 11:58:34.158] [jointLog] [info] Mapping rate = 76.5064%
[2024-12-03 11:59:00.068] [jointLog] [info] Mapping rate = 70.7907%
[2024-12-03 11:59:16.771] [jointLog] [info] Mapping rate = 66.5707%
[2024-12-03 11:59:30.606] [jointLog] [info] Mapping rate = 67.3296%
[2024-12-03 11:59:42.266] [jointLog] [info] Mapping rate = 67.3456%
[2024-12-03 12:00:18.688] [jointLog] [info] Mapping rate = 70.1165%
[2024-12-03 12:00:30.753] [jointLog] [info] Mapping rate = 66.4705%
[2024-12-03 12:00:38.209] [jointLog] [info] Mapping rate = 68.8421%
[2024-12-03 12:00:50.990] [jointLog] [info] Mapping rate = 74.6662%
[2024-12-03 12:01:36.396] [jointLog] [info] Mapping rate = 69.8874%