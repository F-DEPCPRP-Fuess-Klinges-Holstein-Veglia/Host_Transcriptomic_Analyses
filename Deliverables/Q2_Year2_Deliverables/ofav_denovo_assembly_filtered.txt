### DRTO OFAV filtered assembly ###

#randomly select 5 samples:
DT25_OFAV_3H_Sept_2021_S286
DT26_OFAV_2D_August_2022_S352
DT26_OFAV_3D_August_2022_S353
DT28_OFAV_2H_June_2022_S257
DT28_OFAV_3H_Febr_2022_S302


# filter using kraken genome database

vi kraken.sh
i

#!/bin/bash
#SBATCH --job-name=kraken
#SBATCH -N 1
#SBATCH -t 1-24:00
#SBATCH --partition=shared
#SBATCH --mem=50G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH --open-mode=append
#SBATCH -o kraken_%j.out
#SBATCH -e kraken_%j.err

#for loop to run kraken filtering on all pairs in the folder
# this code assumes you are already in the directory that contains the reads
for infile in *R1_cln.fastq
	do
	echo "working with sample $infile"
	base=$(basename ${infile} _R1_cln.fastq)
	infile2=${base}_R2_cln.fastq
	echo "Now running kraken"
	/home/vwk8/miniconda3/envs/RNAseq/bin/kraken2-2.0.8-beta/kraken2 --db /home/vwk8/miniconda3/envs/RNAseq/bin/krakenDB_gen ${base}_R1_cln.fastq ${base}_R2_cln.fastq --threads 16 --paired --classified-out ${base}_contam#.fastq --unclassified-out ${base}_unclass#.fastq --report ${base}_krakenDB.report --output ${base}_krakenDB.out
	done
	echo "Dunzo"


# Now run bbsplit on these kraken-filtered files

#!/bin/bash
#SBATCH --job-name=bbs_ofav
#SBATCH -N 1
#SBATCH -t 1-24:00
#SBATCH --partition=shared
#SBATCH --mem=100G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o bbsplit_%j.out
#SBATCH -e bbsplit_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/
DIR=/home/vwk8/transcriptomes/symbiont
for FILE in *_unclass_1.fastq; do
        echo ${FILE}
        SAMP=$(basename -s _unclass_1.fastq $FILE)
        echo $SAMP

/home/vwk8/miniconda3/envs/RNAseq/bin/bbsplit.sh in1=${SAMP}_unclass_1.fastq in2=${SAMP}_unclass_2.fastq ref=${DIR}/Smic_Aranda2016/Smic.transcriptomeRef.cov5.fa,${DIR}/SymA_Y106_Shoguchi2018.fasta,${DIR}/Baenigmaticum_Parkinson2016/aenig_assembly_longest_250.fa,${DIR}/Bminutum_Parkinson2016/min_assembly_longest_250.fa,${DIR}/Bpseudominutum_Parkinson2016/pmin_assembly_longest_250.fa,${DIR}/Bpsygmophilum_Parkinson2016/psyg_assembly_longest_250.fa,${DIR}/Cgoreaui_Davies2016/davies_cladeC_feb.fasta,${DIR}/Clado_spp_Y103_Shoguchi2018.fasta,${DIR}/Dtrenchii_Bellantuono2019/Dtrenchii_rnaseq_assembly_v1.0.fasta basename=${SAMP}_%.fasta refstats=${SAMP}_stats.txt outu1=${SAMP}_bboutu_R1.fasta outu2=${SAMP}_bboutu_R2.fasta
done

## Example from one sample

#name	%unambiguousReads	unambiguousMB	%ambiguousReads	ambiguousMB	unambiguousReads	ambiguousReads	assignedReads	assignedBases
min_assembly_longest_250	0.48700	69.614370	1.89617	272.057928	476674	1855944	2332440	341655925
pmin_assembly_longest_250	0.32483	46.265074	1.85347	265.971627	317938	1814148	317938	46265074
SymA_Y106_Shoguchi2018	0.17555	24.512942	0.26973	39.068221	171826	264008	171980	24530313
psyg_assembly_longest_250	0.06674	9.308569	0.27494	38.866672	65320	269104	114532	16427539
aenig_assembly_longest_250	0.04861	6.670521	0.24825	34.867474	47580	242986	60860	8590143
Clado_spp_Y103_Shoguchi2018	0.03158	4.305333	0.27756	40.161995	30906	271674	294326	43339853
davies_cladeC_feb	0.03154	4.342238	0.04319	6.088560	30874	42278	35144	4966326
Dtrenchii_rnaseq_assembly_v1.0	0.00827	0.903513	0.00345	0.404961	8092	3378	9560	1058115
Smic.transcriptomeRef.cov5	0.00166	0.172862	0.00123	0.132091	1624	1204	2490	257317


## now assemble these in Trinity

DT25_OFAV_3H_Sept_2021_S286_bboutu_R1.fasta
DT25_OFAV_3H_Sept_2021_S286_bboutu_R2.fasta
DT26_OFAV_2D_August_2022_S352_bboutu_R1.fasta
DT26_OFAV_2D_August_2022_S352_bboutu_R2.fasta
DT26_OFAV_3D_August_2022_S353_bboutu_R1.fasta
DT26_OFAV_3D_August_2022_S353_bboutu_R2.fasta
DT28_OFAV_2H_June_2022_S257_bboutu_R1.fasta
DT28_OFAV_2H_June_2022_S257_bboutu_R2.fasta
DT28_OFAV_3H_Febr_2022_S302_bboutu_R1.fasta
DT28_OFAV_3H_Febr_2022_S302_bboutu_R2.fasta


vi trinity.sh
i
#!/bin/bash
#SBATCH --job-name=Trin_ofav
#SBATCH -N 1
#SBATCH -t 14-24:00
#SBATCH --partition=himem
#SBATCH --mem=300G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o trinity_%j.out
#SBATCH -e trinity_%j.err

Trinity --normalize_reads --seqType fa --grid_node_CPU 21 --grid_node_max_memory 400G --max_memory 400G --SS_lib_type FR --left DT25_OFAV_3H_Sept_2021_S286_bboutu_R1.fasta,DT26_OFAV_2D_August_2022_S352_bboutu_R1.fasta,DT26_OFAV_3D_August_2022_S353_bboutu_R1.fasta,DT28_OFAV_2H_June_2022_S257_bboutu_R1.fasta,DT28_OFAV_3H_Febr_2022_S302_bboutu_R1.fasta --right DT25_OFAV_3H_Sept_2021_S286_bboutu_R2.fasta,DT26_OFAV_2D_August_2022_S352_bboutu_R2.fasta,DT26_OFAV_3D_August_2022_S353_bboutu_R2.fasta,DT28_OFAV_2H_June_2022_S257_bboutu_R2.fasta,DT28_OFAV_3H_Febr_2022_S302_bboutu_R2.fasta --CPU 25 --output trinity_out_dir

## Now quality stats

################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':  624539
Total trinity transcripts:      990288
Percent GC: 41.50
########################################
Stats based on ALL transcript contigs:
########################################
        Contig N10: 3058
        Contig N20: 1863
        Contig N30: 1210
        Contig N40: 842
        Contig N50: 616
        Median contig length: 318
        Average contig: 514.36
        Total assembled bases: 509367379
#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################
        Contig N10: 2426
        Contig N20: 1234
        Contig N30: 771
        Contig N40: 550
        Contig N50: 422
        Median contig length: 281
        Average contig: 418.75
        Total assembled bases: 261524112

vi busco.sh
i
#!/bin/bash
#SBATCH --job-name=busco_ofav
#SBATCH -N 1
#SBATCH -t 6-24:00
#SBATCH --partition=shared
#SBATCH --mem=150G
#SBATCH --mail-type=end
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o busco_%j.out
#SBATCH -e busco_%j.err

busco -i Trinity.fasta -l /home/vwk8/miniconda3/envs/RNAseq/bin/busco_downloads/lineages/metazoa_odb10 -o busco_output_raw -m transcriptome --offline

	***** Results: *****

	C:96.1%[S:24.3%,D:71.8%],F:2.3%,M:1.6%,n:954	   
	917	Complete BUSCOs (C)			   
	232	Complete and single-copy BUSCOs (S)	   
	685	Complete and duplicated BUSCOs (D)	   
	22	Fragmented BUSCOs (F)			   
	15	Missing BUSCOs (M)			   
	954	Total BUSCO groups searched

##now running through remaining txome assembly steps (minus master coral database)

#select longest isoform
/home/vwk8/miniconda3/envs/RNAseq/opt/trinity-2.9.1/util/misc/get_longest_isoform_seq_per_trinity_gene.pl Trinity.fasta > processed_transcriptome_ofav.fa

#An index of the metatranscriptome assembly is created with [cdbfasta]
/home/vwk8/miniconda3/envs/RNAseq/bin/cdbfasta-master/cdbfasta Trinity.fasta

#Extract the longest open reading frame from each contig and then generate its predicted peptide sequence using [TransDecoder]
###this should remove rRNAs and tRNAs, as they are not coding typically
## and is identifying isoforms
/home/vwk8/miniconda3/envs/RNAseq/bin/TransDecoder-TransDecoder-v5.7.1/TransDecoder.LongOrfs -t processed_transcriptome_ofav.fa
/home/vwk8/miniconda3/envs/RNAseq/bin/TransDecoder-TransDecoder-v5.7.1/TransDecoder.Predict -t processed_transcriptome_ofav.fa
# Rename the resulting .pep file to end in .fa
mv processed_transcriptome_ofav.fa.transdecoder.pep processed_transcriptome_ofav.transdecoder.fa

#similar sequences are removed with cdhit
/home/vwk8/miniconda3/envs/RNAseq/bin/cdhit-master/cd-hit -i processed_transcriptome_ofav.transdecoder.fa -o reference_proteome.fa
# This reference proteome is now ready for Orthofinder

#~~~~~ Step 4: Make an alignable transcriptome~~~~~~~~~~~~
#Use the reference proteome to create an alignable transcriptome:
grep ">" reference_proteome.fa > proteome_names.txt
sed 's/.p/\t/' proteome_names.txt > proteome_names_format.txt
awk '{print $1}'  proteome_names_format.txt > contigs_to_extract.txt
sed 's/^.//g' contigs_to_extract.txt > contigs_list.txt

cat contigs_list.txt | /home/vwk8/miniconda3/envs/RNAseq/bin/cdbfasta-master/cdbyank Trinity.fasta.cidx > final_coral_reference_transcriptome.fa

# now check quality again

/home/vwk8/miniconda3/envs/RNAseq/opt/trinity-2.9.1/util/TrinityStats.pl final_coral_reference_transcriptome.fa

################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':  66370
Total trinity transcripts:      66370
Percent GC: 44.02

########################################
Stats based on ALL transcript contigs:
########################################

        Contig N10: 4965
        Contig N20: 3592
        Contig N30: 2787
        Contig N40: 2227
        Contig N50: 1741

        Median contig length: 588
        Average contig: 1061.68
        Total assembled bases: 70463516

#!/bin/bash
#SBATCH --job-name=busco_ofav
#SBATCH -N 1
#SBATCH -t 6-24:00
#SBATCH --partition=himem
#SBATCH --mem=50G
#SBATCH --mail-type=end
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o busco_%j.out
#SBATCH -e busco_%j.err

busco -i final_coral_reference_transcriptome.fa  -l /home/vwk8/miniconda3/envs/RNAseq/bin/busco_downloads/lineages/metazoa_odb10 -o busco_output_fin -m transcriptome --offline

	***** Results: *****

	C:91.5%[S:80.8%,D:10.7%],F:4.5%,M:4.0%,n:954	   
	873	Complete BUSCOs (C)			   
	771	Complete and single-copy BUSCOs (S)	   
	102	Complete and duplicated BUSCOs (D)	   
	43	Fragmented BUSCOs (F)			   
	38	Missing BUSCOs (M)			   
	954	Total BUSCO groups searched

########### now start additional contamination removal step via protein blast with 17 Symbiodiniaceae proteome files #############

vi contam_prot_blast.sh

#!/bin/bash
#SBATCH --job-name=blast_ofav
#SBATCH -N 1
#SBATCH -t 13-24:00
#SBATCH --partition=himem
#SBATCH --mem=400G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o prot_remov_%j.out
#SBATCH -e prot_remov_%j.err

blastx -query final_coral_reference_transcriptome.fa -db ~/proteomes/SymbProts_db -outfmt "6 qseqid evalue pident length" -max_target_seqs 5 -out symbiont_hits.txt


# Modified from Astrangia pub, now we compare against the symbiont reference proteome and pull out seqs with >80% identity and >100bp length match
awk '{if ($3 > 80) print $1,$2,$4 }' symbiont_hits.txt > symbiont_contigs_80.txt
awk '{if ($3 > 100) print $1}' symbiont_contigs_80.txt > final_symbiont_contigs.txt
awk '!a[$0]++' final_symbiont_contigs.txt > final_symbiont_contigs_nodup.txt

#Then pull the reads using BBmap
filterbyname.sh in=final_coral_reference_transcriptome.fa out=final_blasted_ofav_transcriptome.fa names=final_symbiont_contigs_nodup.txt

#now check quality, completeness
/home/vwk8/miniconda3/envs/RNAseq/opt/trinity-2.9.1/util/TrinityStats.pl final_blasted_ofav_transcriptome.fa

################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':  64207
Total trinity transcripts:      64207
Percent GC: 43.82

########################################
Stats based on ALL transcript contigs:
########################################

        Contig N10: 4999
        Contig N20: 3622
        Contig N30: 2826
        Contig N40: 2258
        Contig N50: 1775

        Median contig length: 595
        Average contig: 1075.80
        Total assembled bases: 69073924


#get output file of all the transcripts in the final filtered and assembled transcriptome, will use this in R
fgrep ">" final_blasted_ofav_transcriptome.fa > OFAV_transcripts.txt
#open with excel, ctrl+f and replace to remove the carrots it pulls out, and separate out the columns
#renamed to OFAV_t_g to just have gene and transcript (it's just the initial name from each row copied for gene & transcript)

#~~~~STEP 5~~~~~
#annotate this final transcriptome now

vi prot_blast_annot.sh
i
#!/bin/bash
#SBATCH --job-name=ann_ofra
#SBATCH -N 1
#SBATCH -t 6-24:00
#SBATCH --partition=himem
#SBATCH --mem=500G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o protblast_%j.out
#SBATCH -e protblast_%j.err

/home/vwk8/miniconda3/envs/RNAseq/bin/ncbi-blast-2.15.0+/bin/blastx -query final_blasted_ofav_transcriptome.fa -db /home/vwk8/miniconda3/envs/RNAseq/bin/ncbi-blast-2.15.0+/bin/uniprot_db -outfmt "6 sseqid qseqid evalue" -max_target_seqs 1 -out annotated_coral_reference_transcriptome.txt


#################Start aligning reads to reference transcriptomes###############
# BBSplit: Sort coral and Symbiodiniaceae reads
#Our eukaryotic reads contain sequences that originate from both the coral host species as well as their intracellular Symbiodiniaceae. There are four predominant Symbiodiniaceae genera that form symbioses with the corals in our study, so we will use [BBMap](https://jgi.doe.gov/data-and-tools/bbtools/bb-tools-user-guide/bbmap-guide/) to map reads to the coral host transcriptome, as well as Symbiodinium, Breviolum, Cladocopium, and Durusdinium transcriptomes, prior to read quantification. BBMap #is splice-aware global aligner for DNA and RNA sequencing reads, and BBsplit uses BBMap to map reads to multiple transcriptomes at once and determines which transcriptome each reads matches to best.

## want to use one representative transcriptome for each genera of Symbiodiniaceae, and prefer using ones assembled from pure culture (as opposed to from in hospite/from coral tissue):
Clade A: Smic Aranda et al. 2016 (both options from pure culture, this one assoc. with Cnidarians more)
Clade B: Bminutum, Parkinson 2016 (most known to associate with warm water corals of the 4 available from this pub)
Clade C: Clado_spp_Y103, Shoguchi et al. 2018 (from clam but from culture, C goreaui is from SSID and not great quality)
Clade D: D trenchii, Bellantuono 2019 (only option)

vi bbsplit.sh
i
#!/bin/bash
#SBATCH --job-name=bbs_ofavDRTO
#SBATCH -N 1
#SBATCH -t 4-24:00
#SBATCH --partition=himem
#SBATCH --mem=250G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o bbsplit_%j.out
#SBATCH -e bbsplit_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/
DIR=/home/vwk8/transcriptomes
for FILE in *_R1_cln.fastq; do
        echo ${FILE}
        SAMP=$(basename -s _R1_cln.fastq $FILE)
        echo $SAMP

/home/vwk8/miniconda3/envs/RNAseq/bin/bbsplit.sh in1=${SAMP}_R1_cln.fastq in2=${SAMP}_R2_cln.fastq ref=${DIR}/DRTO_denovo/final_blasted_ofav_transcriptome.fa,${DIR}/symbiont/Dtrenchii_Bellantuono2019/Dtrenchii_rnaseq_assembly_v1.0.fasta,${DIR}/symbiont/Clado_spp_Y103_Shoguchi2018.fasta,${DIR}/symbiont/Bminutum_Parkinson2016/min_assembly_longest_250.fa,${DIR}/symbiont/Smic_Aranda2016/Smic.transcriptomeRef.cov5.fa basename=${SAMP}_%.fasta refstats=${SAMP}_stats.txt outu1=${SAMP}_bboutu_R1.fasta outu2=${SAMP}_bboutu_R2.fasta
done

#This will create one output for each file. The text file for ref stats can be downloaded and placed into BBSplit Statistics output file for all species. It will be used at bottom for Summary of Genus Averages.

## for some reason this was taking wayyy longer on the himem node? Stopped after 4 days and re-running on shared node with 100G memory

#From here, each file will need to be reformatted with BBMap program to split back into two separate fastq files for forward and reverse reads
#first doing this for mcav files, will do symbiont ones later when running analysis on them

# move coral aligned files to new directory within titled "salmon"

vi bbmap.sh
i
#!/bin/bash
#SBATCH --job-name=bbmap_ofav
#SBATCH -N 1
#SBATCH -t 2-24:00
#SBATCH --partition=shared
#SBATCH --mem=50G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o bbmap_%j.out
#SBATCH -e bbmap_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/
for FILE in *_transcriptome.fasta; do
        echo ${FILE}
        SAMP=$(basename -s .fasta $FILE)
        echo $SAMP
/home/vwk8/miniconda3/envs/RNAseq/bin/bbmap/reformat.sh in=${SAMP}.fasta out1=${SAMP}_1.fq out2=${SAMP}_2.fq
done

###### Salmon: Read Quantification ###################
#Salmon (https://salmon.readthedocs.io/en/latest/salmon.html#) is a tool built for transcript quantification. It uses two phases; indexing and quantification, to map samples. The first step, indexing, is independent of the reads and requires a reference transcript to build an index. Code for that is as follows:

## Index Building for Host Transcriptomes
#For the host indexes, we can keep kmer values at a standard as we are confident in the transcriptomes we have just built and the quality of the transcriptome.
# ofav index
#ran very quickly
/home/vwk8/miniconda3/envs/RNAseq/bin/salmon index -t /home/vwk8/transcriptomes/DRTO_denovo/final_blasted_ofav_transcriptome.fa -i OFAV_transcriptome_index.fa

## Mapping Reads: Use Salmon for quasi-mapping results
#eventually do for dominant symbiont as well
[Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#) is a tool built for transcript quantification. It uses two phases; indexing and quantification, to map samples. The second phase: quantification, using quasi-mapping program to map samples to index. Quasi-mapping assumes a generally small file and increased number of repeats in reference sequences. It also takes into account splicing because a transcriptome is assumed to be used for the index.

#  move host-aligned filtered files into you salmon directory
#  since we'll be running the same command on each sample, the simplest way to automate this process is with a simple shell script
#  the script loops through each sample and invokes salmon using fairly barebone options
# -i  tells salmon where to find the index
# -l A tells salmon that it should automatically determine the library type of the sequencing reads (stranded vs. unstranded etc.)
# -1 and -2 tell salmon where to find the left and right reads for this sample (notice, salmon will accept gzipped FASTQ files directly)
# -p 8 tells salmon to make use of 8 threads
# -o specifies the directory where salmon's quantification results should be written

# Loop for Ofav
vi salmon_loop.sh

#!/bin/bash
#SBATCH --job-name=salmon_ofav
#SBATCH -N 1
#SBATCH -t 4-24:00
#SBATCH --partition=himem
#SBATCH --mem=500G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o salmon_reads_%j.out
#SBATCH -e salmon_reads_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/salmon
for FILE in *_1.fq; do
        echo ${FILE}
        SAMP=$(basename -s _1.fq $FILE)
        echo $SAMP
        DIR=/home/vwk8/transcriptomes/DRTO_denovo

/home/vwk8/miniconda3/envs/RNAseq/bin/salmon quant -i ${DIR}/OFAV_transcriptome_index.fa -l A \
				-1 ${SAMP}_1.fq \
				-2 ${SAMP}_2.fq \
				-p 8 --validateMappings -o quants/${SAMP}_quant
done


#% alignment?
grep "Mapping rate" salmon_reads_471979.err

[2024-11-12 14:50:18.842] [jointLog] [info] Mapping rate = 87.6605%
[2024-11-12 14:52:13.109] [jointLog] [info] Mapping rate = 85.6507%
[2024-11-12 14:53:45.238] [jointLog] [info] Mapping rate = 58.4003%
[2024-11-12 14:56:04.028] [jointLog] [info] Mapping rate = 86.0491%
[2024-11-12 14:57:54.956] [jointLog] [info] Mapping rate = 87.7737%
[2024-11-12 14:59:44.775] [jointLog] [info] Mapping rate = 76.7819%
[2024-11-12 15:01:58.376] [jointLog] [info] Mapping rate = 69.6204%
[2024-11-12 15:03:34.364] [jointLog] [info] Mapping rate = 86.0508%
[2024-11-12 15:05:40.075] [jointLog] [info] Mapping rate = 80.5413%
[2024-11-12 15:07:48.861] [jointLog] [info] Mapping rate = 74.7326%
[2024-11-12 15:09:34.513] [jointLog] [info] Mapping rate = 70.307%
[2024-11-12 15:11:27.703] [jointLog] [info] Mapping rate = 72.2793%
[2024-11-12 15:13:19.861] [jointLog] [info] Mapping rate = 88.3653%
[2024-11-12 15:15:40.670] [jointLog] [info] Mapping rate = 70.7192%
[2024-11-12 15:18:05.783] [jointLog] [info] Mapping rate = 74.4363%
[2024-11-12 15:19:34.649] [jointLog] [info] Mapping rate = 73.6039%
[2024-11-12 15:21:12.224] [jointLog] [info] Mapping rate = 89.2644%
[2024-11-12 15:23:04.066] [jointLog] [info] Mapping rate = 84.3761%
[2024-11-12 15:25:15.333] [jointLog] [info] Mapping rate = 84.3251%
[2024-11-12 15:26:52.279] [jointLog] [info] Mapping rate = 67.9038%
[2024-11-12 15:37:18.798] [jointLog] [info] Mapping rate = 82.4936%
[2024-11-12 15:39:29.862] [jointLog] [info] Mapping rate = 72.474%
[2024-11-12 15:41:25.898] [jointLog] [info] Mapping rate = 81.5653%
[2024-11-12 15:43:51.014] [jointLog] [info] Mapping rate = 79.9458%
[2024-11-12 15:45:40.133] [jointLog] [info] Mapping rate = 79.5882%
[2024-11-12 15:47:28.205] [jointLog] [info] Mapping rate = 70.18%
[2024-11-12 15:49:49.160] [jointLog] [info] Mapping rate = 76.5902%
[2024-11-12 15:51:45.840] [jointLog] [info] Mapping rate = 74.9139%
[2024-11-12 15:53:44.691] [jointLog] [info] Mapping rate = 78.6467%
[2024-11-12 15:55:51.807] [jointLog] [info] Mapping rate = 79.6954%
[2024-11-12 15:58:17.236] [jointLog] [info] Mapping rate = 74.8899%
[2024-11-12 16:00:22.016] [jointLog] [info] Mapping rate = 74.7563%
[2024-11-12 16:02:27.681] [jointLog] [info] Mapping rate = 77.5064%
[2024-11-12 16:04:05.265] [jointLog] [info] Mapping rate = 79.388%

# now start on symbiont files
# most are Clade C, 3 are clade B
# did B ones in terminal, not as job

#!/bin/bash
#SBATCH --job-name=bbm_symC
#SBATCH -N 1
#SBATCH -t 2-24:00
#SBATCH --partition=shared
#SBATCH --mem=50G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o bbmap_%j.out
#SBATCH -e bbmap_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/
for FILE in *.fasta; do
        echo ${FILE}
        SAMP=$(basename -s .fasta $FILE)
        echo $SAMP
/home/vwk8/miniconda3/envs/RNAseq/bin/bbmap/reformat.sh in=${SAMP}.fasta out1=${SAMP}_1.fq out2=${SAMP}_2.fq
done

##  now salmon for each clade

# Loop for symB
vi salmon.sh

#!/bin/bash
#SBATCH --job-name=salm_ofB
#SBATCH -N 1
#SBATCH -t 4-24:00
#SBATCH --partition=himem
#SBATCH --mem=500G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o salmon_%j.out
#SBATCH -e salmon_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/salmon
for FILE in *_1.fq; do
        echo ${FILE}
        SAMP=$(basename -s _1.fq $FILE)
        echo $SAMP
        DIR=/home/vwk8/transcriptomes/symbiont

/home/vwk8/miniconda3/bin/salmon quant -i ${DIR}/Bminutum_Parkinson2016/B_min_index -l A \
				-1 ${SAMP}_1.fq \
				-2 ${SAMP}_2.fq \
				-p 8 --validateMappings -o quants/${SAMP}_quant
done


# % alignment

grep "Mapping rate" salmon_.err

[2024-12-03 12:18:53.064] [jointLog] [info] Mapping rate = 83.3577%
[2024-12-03 12:19:07.759] [jointLog] [info] Mapping rate = 83.5341%
[2024-12-03 12:19:26.214] [jointLog] [info] Mapping rate = 83.7371%

# Loop for symC
vi salmon.sh

#!/bin/bash
#SBATCH --job-name=salm_ofC
#SBATCH -N 1
#SBATCH -t 4-24:00
#SBATCH --partition=himem
#SBATCH --mem=500G
#SBATCH --mail-type=end
#SBATCH --mail-type=fail
#SBATCH --mail-user=vwk8@txstate.edu
#SBATCH -o salmon_%j.out
#SBATCH -e salmon_%j.err
PATH=$PATH:/home/vwk8/miniconda3/envs/RNAseq/bin/salmon
for FILE in *_1.fq; do
        echo ${FILE}
        SAMP=$(basename -s _1.fq $FILE)
        echo $SAMP
        DIR=/home/vwk8/transcriptomes/symbiont

/home/vwk8/miniconda3/bin/salmon quant -i ${DIR}/C_sppY103_index -l A \
				-1 ${SAMP}_1.fq \
				-2 ${SAMP}_2.fq \
				-p 8 --validateMappings -o quants/${SAMP}_quant
done

# % alignment

grep "Mapping rate" salmon_.err

[2024-12-03 12:20:46.541] [jointLog] [info] Mapping rate = 64.5245%
[2024-12-03 12:21:52.247] [jointLog] [info] Mapping rate = 64.5071%
[2024-12-03 12:22:33.856] [jointLog] [info] Mapping rate = 62.1353%
[2024-12-03 12:23:52.062] [jointLog] [info] Mapping rate = 64.214%
[2024-12-03 12:25:51.431] [jointLog] [info] Mapping rate = 63.7886%
[2024-12-03 12:27:00.675] [jointLog] [info] Mapping rate = 62.5542%
[2024-12-03 12:27:25.121] [jointLog] [info] Mapping rate = 62.6124%
[2024-12-03 12:28:18.678] [jointLog] [info] Mapping rate = 65.4849%
[2024-12-03 12:29:08.454] [jointLog] [info] Mapping rate = 64.9579%
[2024-12-03 12:29:20.556] [jointLog] [info] Mapping rate = 62.0905%
[2024-12-03 12:29:43.546] [jointLog] [info] Mapping rate = 62.6105%
[2024-12-03 12:30:20.808] [jointLog] [info] Mapping rate = 64.7264%
[2024-12-03 12:31:02.816] [jointLog] [info] Mapping rate = 66.3938%
[2024-12-03 12:32:39.297] [jointLog] [info] Mapping rate = 65.3462%
[2024-12-03 12:33:46.440] [jointLog] [info] Mapping rate = 64.7017%
[2024-12-03 12:35:35.324] [jointLog] [info] Mapping rate = 58.0032%
[2024-12-03 12:36:57.853] [jointLog] [info] Mapping rate = 64.6205%
[2024-12-03 12:39:57.164] [jointLog] [info] Mapping rate = 64.3468%
[2024-12-03 12:40:41.289] [jointLog] [info] Mapping rate = 64.7981%
[2024-12-03 12:41:12.856] [jointLog] [info] Mapping rate = 63.1175%
[2024-12-03 12:41:49.813] [jointLog] [info] Mapping rate = 64.6138%
[2024-12-03 12:42:04.850] [jointLog] [info] Mapping rate = 63.2339%
[2024-12-03 12:43:02.702] [jointLog] [info] Mapping rate = 64.6634%
[2024-12-03 12:44:02.958] [jointLog] [info] Mapping rate = 62.0517%
[2024-12-03 12:45:06.630] [jointLog] [info] Mapping rate = 65.99%
[2024-12-03 12:45:30.710] [jointLog] [info] Mapping rate = 61.9685%
[2024-12-03 12:46:08.963] [jointLog] [info] Mapping rate = 63.9004%
[2024-12-03 12:47:17.815] [jointLog] [info] Mapping rate = 64.0785%
[2024-12-03 12:47:58.645] [jointLog] [info] Mapping rate = 65.7058%
[2024-12-03 12:49:14.931] [jointLog] [info] Mapping rate = 64.6526%
[2024-12-03 12:50:10.378] [jointLog] [info] Mapping rate = 64.1657%
